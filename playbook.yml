- hosts: localhost
  tasks:
    - name: Remove packagekit
      apt:
        pkg:
          - packagekit
        state: absent
      become: true

    - name: Install Essentials Ubuntu tools 
      apt:
        pkg: 
          - apt-transport-https
          - build-essential
          - software-properties-common
          - vim
          - zsh
          - xclip
          - htop
          - git
          - ca-certificates
          - curl
          - lsb-release
          - ripgrep
          - gnupg
          - gnupg2
          - expect
          - fd-find
          - tmux
          - gnome-shell-extension-manager
          - gnome-screenshot
          - gir1.2-gtop-2.0
          - lm-sensors
          - hugo
        state: latest
        update_cache: true
      become: true
      tags:
        - local
        - essentials

    - name: Edit folder design
      block:
        - name: Edit Workspace folder
          file:
            path: "{{ ansible_env.HOME }}/Workspace/{{ ansible_user }}"
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            state: directory
      tags:
        - local

    - name: Install, configure, and start Docker
      block:
        - name: Add Docker's GPG key
          get_url:
            url: https://download.docker.com/linux/ubuntu/gpg
            dest: /etc/apt/trusted.gpg.d/docker.asc
            mode: '0644'
            force: true
          ignore_errors: true

        - name: Add Docker Repository
          apt_repository:
            repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
            state: present
            update_cache: true

        - name: Update apt and install Docker pkgs 
          apt:
            name: 
              - docker-ce
              - docker-compose-plugin
              - docker-ce-cli
              - containerd.io
              - docker-buildx-plugin
            state: present 
            update_cache: true

        - name: Create the docker group
          group:
            name: docker
            state: present

        - name: Add the current user to the docker group
          user:
            name: "{{ ansible_env.USER }}"
            groups: docker
            append: yes

        - name: Enable the docker service
          systemd:
            name: docker
            state: started
            enabled: yes

        - name: Enable the containerd service
          systemd:
            name: containerd
            state: started
            enabled: yes
      become: true
      tags:
        - docker

    - name: Download and install Neovim
      block:
        - name: Download Neovim appimage
          get_url:
            url: https://github.com/neovim/neovim/releases/download/stable/nvim.appimage
            dest: /usr/local/bin/nvim
            mode: '0755' 
      become: true
      tags:
        - pde

    - name: Download and install Mattermost
      block:
        - name: Download Mattermost setup script 
          get_url:
            url: https://deb.packages.mattermost.com/setup-repo.sh
            dest: /tmp/setup-repo.sh

        - name: Run Mattermost setup script 
          shell: bash /tmp/setup-repo.sh

        - name: Install Mattermost
          apt:
            name: mattermost-desktop
            state: latest
            update_cache: true
      become: true
      tags:
        - desktop
        - codebuds

    - name: Install Google Chrome
      apt:
        deb: https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb 
        state: present
        update_cache: true
      become: true 
      tags:
        - desktop 

    - name: Download Discord
      apt:
        deb: https://discord.com/api/download?platform=linux&format=deb
        state: present
        update_cache: true
      become: true
      tags:
        - discord
        - desktop

    - name: Setup Node.js LTS
      block:
        - name: Add Nodesource apt key
          get_url:
            url: https://keyserver.ubuntu.com/pks/lookup?op=get&fingerprint=on&search=0x1655A0AB68576280
            dest: /etc/apt/trusted.gpg.d/node.asc
            mode: '0644'
            force: true

        - name: Add NodeSource repositories for Node.js
          apt_repository:
            repo: "{{ item }}"
            state: present
          with_items:
            - "deb https://deb.nodesource.com/node_18.x {{ ansible_distribution_release }} main"
            - "deb-src https://deb.nodesource.com/node_18.x {{ ansible_distribution_release }} main"
          register: node_repo

        - name: Update apt cache if repo was added.
          apt: update_cache=yes
          when: node_repo is changed

        - name: Install Node.js
          apt:
            name: "nodejs=18*"
            state: present

        - name: Create npm global director
          file:
            path: "/user/local/lib/npm"
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            state: directory
            mode: '0755'

        - name: Ensure npm global packages are installed
          npm: 
            name: "{{ item }}"
            global: true
          with_items: 
            - "@bitwarden/cli"
      become: true
      tags: 
        - dev
        - node
        - pde

    - name: Install and init Chezmoi
      block:
        - name: Create dir for Chezmoi
          file:
            path: "{{ ansible_env.HOME }}/.local/share"
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            state: directory
          become: true
            
        - name: Install Chezmoi
          shell: sh -c "$(curl -fsLS get.chezmoi.io)" -- -b "{{ ansible_env.HOME }}/.local/bin" 
          become: true

        - name: Init Chezmoi
          shell: "{{ ansible_env.HOME }}/.local/bin/chezmoi init --apply GabrielTouron --exclude=templates"

    - name: Install Tmux plugin manager
      git:
         repo: https://github.com/tmux-plugins/tpm
         dest: "{{ ansible_env.HOME }}/.tmux/plugins/tpm" 
      tags:
        - pde

    - name: Load Gnome terminal config
      # TODO: load a global gnome config 
      shell: |
        dconf reset -f /org/gnome/terminal/
        dconf load /org/gnome/terminal/ < "{{ ansible_env.HOME }}"/.config/gtk-3.0/gnome_terminal_settings_backup.txt
      tags:
        - pde
        - gnome

    - name: Install zsh, add plugins and set as default
      block:
        - name: Install pip
          apt:
            update_cache: yes
            name:
              - python3-pip
          become: true

        - name: Install pexpect
          pip:
            name: pexpect
          become: true

        - name: Download Starship theme
          get_url:
            url: https://starship.rs/install.sh
            dest: /tmp/install.sh
            mode: u+x 
          become: true

        - name: Install Starship theme
          expect:
            command: sh /tmp/install.sh
            responses:
              Install : 'y'
          become: true

        - name: Install zsh-syntax-highlighting plugin
          git:
            repo: https://github.com/zsh-users/zsh-autosuggestions.git
            dest: "{{ ansible_env.HOME }}/.zsh/zsh-autosuggestions"

        - name: Install zsh-z plugin
          git: 
            repo: https://github.com/agkozak/zsh-z.git
            dest: "{{ ansible_env.HOME }}/.zsh/zsh-z"

        - name: Install zsh-syntax-highlighting
          git:
            repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
            dest: "{{ ansible_env.HOME }}/.zsh/zsh-syntax-highlighting.git"

        - name: Set zsh as default
          user:
            name: gabriel
            shell: /usr/bin/zsh
          become: true
      vars:
        ansible_python_interpreter: /usr/bin/python3

    - name: Install pulumi
      block:
        - name: Download Pulumi
          get_url:
            url: https://get.pulumi.com
            dest: /tmp/pulumi.sh
            mode: u+x 

        - name: Install Pulumi
          command: sh /tmp/pulumi.sh
      tags:
        - cloud

    - name: Install Gcloud CLI
      block:
        - name: Add Gcloud public key
          get_url:
            url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
            dest: /usr/share/keyrings/cloud.google.gpg
            mode: '0644'
            force: true

        - name: Add Gcloud Repository
          apt_repository:
            repo: "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" 
            state: present
            update_cache: true

        - name: Update apt and install Gcloud CLI 
          apt:
            name: google-cloud-cli 
            state: present 
            update_cache: true
      become: true

    - name: Download Cloud Sql proxy client binary
      get_url:
        url: https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 
        dest: "/usr/local/bin/cloud_sql_proxy"
        mode: '0755' 
      become: true
      tags:
        - gcloud
            
    - name: Download and install Anki 
      block:
        - name: Unarchive Anki dir
          unarchive:
            src: https://github.com/ankitects/anki/releases/download/2.1.61/anki-2.1.61-linux-qt6.tar.zst
            dest: /tmp
            remote_src: yes

        - name: Go to the folder and execute install script 
          command: chdir=/tmp/anki-2.1.61-linux-qt6 ./install.sh
      become: true
      tags:
        - anki 

    - name: Install Golang
      block:
        - name: Remove old Golang version and install new Golang version 
          unarchive:
            src: https://go.dev/dl/go1.20.3.linux-amd64.tar.gz
            dest: /usr/local
            remote_src: yes
      become: true
      tags:
        - golang

    - name: Install Ngrok
      block:
        - name: Install Ngrok
          unarchive:
            src: https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz
            dest: /usr/local/bin
            remote_src: yes
      become: true
      tags:
        - ngrok

    - name: Install Cozy drive
      get_url:
        url: https://nuts.cozycloud.cc/download/channel/stable/64
        dest: "/usr/local/bin/cozy"
        mode: '0755'
      become: true
      tags:
        - cozy
